[{"C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\index.js":"1","C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\reportWebVitals.js":"2","C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\App.js":"3","C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\redux\\redux-store.ts":"4","C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\redux\\app-reducer.ts":"5","C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\redux\\profile-reducer.ts":"6","C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\redux\\dialog-reducer.ts":"7","C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\redux\\users-reducer.ts":"8","C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\redux\\auth-reducer.ts":"9","C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\components\\Users\\UsersContainer.tsx":"10","C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\components\\Profile\\Settings\\Settings.jsx":"11","C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\components\\HOC\\withSuspense.jsx":"12","C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\components\\Header\\HeaderComponent.jsx":"13","C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\components\\Profile\\Dialogs\\DialogsContainer.jsx":"14","C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\components\\Navbar\\Navbar.jsx":"15","C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\components\\News\\News.jsx":"16","C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\components\\Music\\Music.jsx":"17","C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\components\\common\\preloader\\Preloader.jsx":"18","C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\components\\Login\\LoginTSX.jsx":"19","C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\utils\\object-helpers.js":"20","C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\redux\\users-selectors.ts":"21","C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\components\\Users\\Users.tsx":"22","C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\components\\HOC\\withAuthRedirect.jsx":"23","C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\components\\Profile\\Profile.jsx":"24","C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\components\\Header\\Header.jsx":"25","C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\components\\Profile\\Dialogs\\Dialogs.jsx":"26","C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\components\\Users\\User.tsx":"27","C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\components\\common\\Paginator\\Paginator.tsx":"28","C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\components\\Profile\\ProfileStatus\\ProfileStatus.tsx":"29","C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\components\\Profile\\Dialogs\\DialogsForm.jsx":"30","C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\components\\Profile\\MyPosts\\MyPostsContainer.jsx":"31","C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\components\\Profile\\Dialogs\\DialogItem\\DialogItem.jsx":"32","C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\components\\Profile\\Dialogs\\Message\\Message.jsx":"33","C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.jsx":"34","C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\utils\\validators.js":"35","C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\components\\Profile\\MyPosts\\MyPosts.jsx":"36","C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\components\\common\\formControls\\formControls.jsx":"37","C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\components\\Profile\\ProfileInfo\\ProfileDataForm.jsx":"38","C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\components\\Profile\\MyPosts\\Post\\Post.jsx":"39","C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\components\\Profile\\MyPosts\\MyPostsForm.jsx":"40","C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\components\\Profile\\ProfileContainer.tsx":"41","C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\Types\\Types.ts":"42","C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\API\\api.ts":"43","C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\components\\Login\\Login.jsx":"44"},{"size":805,"mtime":1614658897714,"results":"45","hashOfConfig":"46"},{"size":362,"mtime":1609132785016,"results":"47","hashOfConfig":"46"},{"size":3523,"mtime":1614931733142,"results":"48","hashOfConfig":"46"},{"size":1033,"mtime":1614692107467,"results":"49","hashOfConfig":"46"},{"size":1246,"mtime":1614931563411,"results":"50","hashOfConfig":"46"},{"size":4629,"mtime":1614936104855,"results":"51","hashOfConfig":"46"},{"size":1283,"mtime":1614844751574,"results":"52","hashOfConfig":"46"},{"size":5712,"mtime":1614930542622,"results":"53","hashOfConfig":"46"},{"size":4666,"mtime":1614933625373,"results":"54","hashOfConfig":"46"},{"size":3793,"mtime":1614855017511,"results":"55","hashOfConfig":"46"},{"size":164,"mtime":1610949191500,"results":"56","hashOfConfig":"46"},{"size":265,"mtime":1613550439136,"results":"57","hashOfConfig":"46"},{"size":482,"mtime":1611924603633,"results":"58","hashOfConfig":"46"},{"size":825,"mtime":1611922239746,"results":"59","hashOfConfig":"46"},{"size":982,"mtime":1610714876016,"results":"60","hashOfConfig":"46"},{"size":148,"mtime":1610949190848,"results":"61","hashOfConfig":"46"},{"size":152,"mtime":1610949190848,"results":"62","hashOfConfig":"46"},{"size":309,"mtime":1610949191589,"results":"63","hashOfConfig":"46"},{"size":3274,"mtime":1614746778743,"results":"64","hashOfConfig":"46"},{"size":245,"mtime":1613550439525,"results":"65","hashOfConfig":"46"},{"size":1045,"mtime":1614746778751,"results":"66","hashOfConfig":"46"},{"size":1000,"mtime":1614746778745,"results":"67","hashOfConfig":"46"},{"size":777,"mtime":1611395230649,"results":"68","hashOfConfig":"46"},{"size":622,"mtime":1613550439177,"results":"69","hashOfConfig":"46"},{"size":717,"mtime":1611909357502,"results":"70","hashOfConfig":"46"},{"size":857,"mtime":1611894833519,"results":"71","hashOfConfig":"46"},{"size":1855,"mtime":1614746778745,"results":"72","hashOfConfig":"46"},{"size":1782,"mtime":1614746778747,"results":"73","hashOfConfig":"46"},{"size":2699,"mtime":1614746778744,"results":"74","hashOfConfig":"46"},{"size":716,"mtime":1611895466016,"results":"75","hashOfConfig":"46"},{"size":1247,"mtime":1611894833524,"results":"76","hashOfConfig":"46"},{"size":311,"mtime":1611387980502,"results":"77","hashOfConfig":"46"},{"size":157,"mtime":1609399927766,"results":"78","hashOfConfig":"46"},{"size":2292,"mtime":1613550439221,"results":"79","hashOfConfig":"46"},{"size":306,"mtime":1611895404987,"results":"80","hashOfConfig":"46"},{"size":899,"mtime":1612271405910,"results":"81","hashOfConfig":"46"},{"size":2057,"mtime":1613550439423,"results":"82","hashOfConfig":"46"},{"size":1352,"mtime":1613550439219,"results":"83","hashOfConfig":"46"},{"size":373,"mtime":1610949191278,"results":"84","hashOfConfig":"46"},{"size":710,"mtime":1611895466017,"results":"85","hashOfConfig":"46"},{"size":2466,"mtime":1614856724104,"results":"86","hashOfConfig":"46"},{"size":659,"mtime":1614746778743,"results":"87","hashOfConfig":"46"},{"size":3006,"mtime":1615037474100,"results":"88","hashOfConfig":"46"},{"size":2630,"mtime":1613550439136,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"1sybgb5",{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"99"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"99"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"99"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"99"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\index.js",[],["185","186"],"C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\reportWebVitals.js",[],"C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\App.js",[],"C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\redux\\redux-store.ts",[],["187","188"],"C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\redux\\app-reducer.ts",["189"],"import { Dispatch } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\nimport { getAuthUserData } from './auth-reducer';\nimport { AppStateType } from './redux-store';\n\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\n\ntype initialStateType = {\n  initialized: boolean,\n}\n\nconst initialState: initialStateType = {\n  initialized: false,\n  // globalError: null\n};\n\ntype ActionsAppTypes = InitializedSuccessActionType;\n\nconst appReducer = (state = initialState, action: ActionsAppTypes): initialStateType => {\n  switch (action.type) {\n    case INITIALIZED_SUCCESS:\n      return {\n        ...state,\n        initialized: true,\n      };\n\n    default:\n      return state;\n  }\n};\n\ntype InitializedSuccessActionType = {\n  type: typeof INITIALIZED_SUCCESS\n}\n\nexport const setInitializedSuccess = (): InitializedSuccessActionType => {\n  return { type: INITIALIZED_SUCCESS };\n};\n\n// type DispatchType = Dispatch<ActionsAppTypes>;\n// type GetStateType = () => AppStateType;\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionsAppTypes>;\n\nexport const initializeApp = (): ThunkType => {\n  return async (dispatch) => {\n    await dispatch(getAuthUserData());\n    dispatch(setInitializedSuccess());\n  };\n};\n\nexport default appReducer;\n","C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\redux\\profile-reducer.ts",["190"],"import { Dispatch } from 'redux';\nimport { stopSubmit } from 'redux-form';\nimport { ThunkAction } from 'redux-thunk';\nimport { profileAPI } from '../API/api';\nimport { photosType, postType, profileType } from '../Types/Types';\nimport { AppStateType } from './redux-store';\n\nconst ADD_POST = 'ADD-POST';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nconst SET_STATUS = 'SET_STATUS';\nconst DELETE_POST = 'DELETE_POST';\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\n\n\nconst initialState = {\n  posts: [\n    { id: 1, message: 'Hello', likesCount: 11 },\n    { id: 2, message: 'How are you?', likesCount: 12 },\n    { id: 3, message: 'Hi!', likesCount: 13 },\n    { id: 4, message: 'Yoo', likesCount: 14 },\n  ] as Array<postType>,\n  profile: null as profileType | null,\n  status: '',\n  postText: ''\n};\n\nexport type initialStateType = typeof initialState;\n\nconst profileReducer = (state = initialState, action: ActionTypes): initialStateType => {\n  switch (action.type) {\n    case ADD_POST:\n      return {\n        ...state,\n        posts: [\n          ...state.posts,\n          {\n            id: state.posts.length + 1,\n            message: action.newPost,\n            likesCount: 0,\n          },\n        ],\n        postText: '',\n      };\n\n    case SET_USER_PROFILE:\n      return {\n        ...state,\n        profile: action.profile,\n      };\n\n    case SET_STATUS:\n      return {\n        ...state,\n        status: action.status,\n      };\n\n    case DELETE_POST:\n      return {\n        ...state,\n        posts: state.posts.filter((post) => post.id !== action.postId),\n      };\n    \n    case SAVE_PHOTO_SUCCESS:\n      return {\n        ...state,\n        profile: {...state.profile, photos: action.photo } as profileType,\n      };\n  \n\n    default:\n      return state;\n  }\n};\n\ntype ActionTypes = addPostActionCreatorActionType | setUserProfileActionType | setStatusActionType | deletePostActionType | savePhotoSuccessActionType;\n\ntype addPostActionCreatorActionType = {\n  type: typeof ADD_POST\n  newPost: string\n}\n\nexport const addPostActionCreator = (newPost: string): addPostActionCreatorActionType => {\n  return { type: ADD_POST, newPost };\n};\n\ntype setUserProfileActionType = {\n  type: typeof SET_USER_PROFILE\n  profile: profileType\n}\n\nconst setUserProfile = (profile: profileType): setUserProfileActionType => {\n  return { type: SET_USER_PROFILE, profile };\n};\n\ntype setStatusActionType = {\n  type: typeof SET_STATUS\n  status: string\n}\n\nexport const setStatus = (status: string): setStatusActionType => {\n  return { type: SET_STATUS, status };\n};\n\ntype deletePostActionType = {\n  type: typeof DELETE_POST\n  postId: number\n}\n\nexport const deletePost = (postId: number): deletePostActionType => {\n  return { type: DELETE_POST, postId };\n};\n\ntype savePhotoSuccessActionType = {\n  type: typeof SAVE_PHOTO_SUCCESS\n  photo: photosType\n}\n\nexport const savePhotoSuccess = (photo:photosType): savePhotoSuccessActionType => {\n  return { type: SAVE_PHOTO_SUCCESS, photo };\n};\n\n// type DispatchType = Dispatch<ActionTypes>;\n// type GetStateType = () => AppStateType;\nexport type ThunkType = ThunkAction<void, AppStateType, unknown, ActionTypes>;\n\nexport const getUserProfileInfo = (userId: number): ThunkType => {\n  return async (dispatch, getState) => {\n    const res = await profileAPI.getProfileData(userId);\n    dispatch(setUserProfile(res.data));\n  };\n};\n\nexport const getUserStatus = (userId: number): ThunkType => {\n  return async (dispatch) => {\n    const res = await profileAPI.getStatus(userId);\n    dispatch(setStatus(res.data));\n  };\n};\n\nexport const updateUserStatus = (status: string): ThunkType => {\n  return async (dispatch) => {\n    try {\n      const res = await profileAPI.updateStatus(status);\n      if (res.data.resultCode === 0) dispatch(setStatus(status));\n    } catch (error) {\n      alert(error)\n    }\n  };\n};\n\nexport const savePhoto = (photo: any): ThunkType => {\n  return async (dispatch) => {\n    const res = await profileAPI.savePhoto(photo);\n    if (res.resultCode === 0) dispatch(savePhotoSuccess(res.data.photos));\n  };\n};\n\nexport const saveProfile = (profile:profileType): ThunkType => {\n  return async (dispatch, getState) => {\n    const userId = getState().auth.id;\n    const res = await profileAPI.saveProfile(profile);\n    if (res.data.resultCode === 0) {\n      \n      // @ts-ignore\n      dispatch(getUserProfileInfo(userId));\n    } else {\n      // @ts-ignore\n      dispatch(stopSubmit('edit-profile', { _error: res.data.messages[0] }));\n      \n      return Promise.reject()\n      // dispatch(stopSubmit('edit-profile', {'contacts':{facebook: res.data.messages[0]}}));\n    }\n  };\n};\n\n\nexport default profileReducer;\n","C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\redux\\dialog-reducer.ts",[],"C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\redux\\users-reducer.ts",["191"],"import { userType } from './../Types/Types';\nimport { usersAPI } from '../API/api';\nimport { updateObjectInArray } from '../utils/object-helpers';\nimport { AppStateType } from './redux-store';\nimport { Dispatch } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\n\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst TOGGLE_FOLLOWING_PROGRESS = 'TOGGLE_FOLLOWING_PROGRESS';\n\n\nconst initialState = {\n  users: [] as Array<userType>,\n  pageSize: 100,\n  currentPage: 1,\n  totalUsersCount: 0,\n  isFetching: false,\n  followingInProgress: [] as Array<number>, // Array of userId\n  // fake: 10,\n};\n\ntype initialStateType = typeof initialState;\n\nconst usersReducer = (state = initialState, action: ActionsTypes): initialStateType => {\n  switch (action.type) {\n    // case 'fake':\n    //   return { ...state, fake: state.fake + 1 };\n\n    case FOLLOW:\n      return {\n        ...state,\n        users: updateObjectInArray(state.users, 'id', action.userId, { followed: true })\n        // users: state.users.map((user) => {\n        //   if (user.id === action.userId) {\n        //     return { ...user, followed: true };\n        //   }\n        //   return user;\n        // }),\n      };\n\n    case UNFOLLOW:\n      return {\n        ...state,\n        users: updateObjectInArray(state.users, 'id', action.userId, { followed: false })\n        // users: state.users.map((user) => {\n        //   if (user.id === action.userId) {\n        //     return { ...user, followed: false };\n        //   }\n        //   return user;\n        // }),\n      };\n\n    case SET_USERS:\n      return { ...state, users: [...action.users] };\n\n    case SET_CURRENT_PAGE:\n      return { ...state, currentPage: action.pageNumber };\n\n    case SET_TOTAL_USERS_COUNT:\n      return { ...state, totalUsersCount: action.totalUsersCount };\n\n    case TOGGLE_IS_FETCHING:\n      return { ...state, isFetching: action.isFetching };\n\n    case TOGGLE_FOLLOWING_PROGRESS:\n      return {\n        ...state,\n        followingInProgress: action.isFetching\n          ? [...state.followingInProgress, action.userId]\n          : state.followingInProgress.filter((id) => id !== action.userId),\n      };\n\n    default:\n      return state;\n  }\n};\n\ntype ActionsTypes = followSuccessActionType | unfollowSuccessActionType | setUsersActionType | setCurrentPageActionType | setTotalUsersCountActionType | toggleIsFetchingActionType | toggleFollowingProgressActionType;\n\ntype followSuccessActionType = {\n  type: typeof FOLLOW\n  userId: number\n}\n\nexport const followSuccess = (userId: number): followSuccessActionType => {\n  return { type: FOLLOW, userId };\n};\n\ntype unfollowSuccessActionType = {\n  type: typeof UNFOLLOW\n  userId: number\n}\n\nexport const unfollowSuccess = (userId: number): unfollowSuccessActionType => {\n  return { type: UNFOLLOW, userId };\n};\n\ntype setUsersActionType = {\n  type: typeof SET_USERS\n  users: Array<userType>\n}\n\nexport const setUsers = (users: Array<userType>): setUsersActionType => {\n  return { type: SET_USERS, users };\n};\n\ntype setCurrentPageActionType = {\n  type: typeof SET_CURRENT_PAGE\n  pageNumber: number\n}\n\nexport const setCurrentPage = (pageNumber: number): setCurrentPageActionType => ({\n  type: SET_CURRENT_PAGE,\n  pageNumber,\n});\n\ntype setTotalUsersCountActionType = {\n  type: typeof SET_TOTAL_USERS_COUNT\n  totalUsersCount: number\n}\n\nexport const setTotalUsersCount = (totalUsersCount: number): setTotalUsersCountActionType => ({\n  type: SET_TOTAL_USERS_COUNT,\n  totalUsersCount,\n});\n\ntype toggleIsFetchingActionType = {\n  type: typeof TOGGLE_IS_FETCHING\n  isFetching: boolean\n}\n\nexport const toggleIsFetching = (isFetching: boolean): toggleIsFetchingActionType => ({\n  type: TOGGLE_IS_FETCHING,\n  isFetching,\n});\n\ntype toggleFollowingProgressActionType = {\n  type: typeof TOGGLE_FOLLOWING_PROGRESS\n  isFetching: boolean\n  userId: number\n}\n\nexport const toggleFollowingProgress = (isFetching: boolean, userId: number): toggleFollowingProgressActionType => ({\n  type: TOGGLE_FOLLOWING_PROGRESS,\n  isFetching,\n  userId,\n});\n\ntype GetStateType = () => AppStateType;\ntype DispatchType = Dispatch<ActionsTypes>;\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionsTypes>;\n\nexport const requestUsers = (currentPage: number, pageSize: number): ThunkType => {\n  // return async (dispatch: DispatchType, getState: GetStateType) => {\n  return async (dispatch, getState) => {\n    dispatch(toggleIsFetching(true));\n    const res = await usersAPI.getUsersData(currentPage, pageSize);\n    dispatch(toggleIsFetching(false));\n    dispatch(setTotalUsersCount(res.totalCount));\n    dispatch(setCurrentPage(currentPage));\n    dispatch(setUsers(res.items));\n  };\n};\n\nconst _followUnfollowFlow = async (\n  dispatch: DispatchType,\n  userId: number,\n  apiMethod: any,\n  actionCreator: (userId: number) => followSuccessActionType | unfollowSuccessActionType\n) => {\n  dispatch(toggleFollowingProgress(true, userId));\n  const res = await apiMethod(userId);\n  if (res.resultCode === 0) dispatch(actionCreator(userId));\n  dispatch(toggleFollowingProgress(false, userId));\n};\n\nexport const follow = (userId: number): ThunkType => {\n  const apiMethod = usersAPI.follow.bind(usersAPI);\n\n  return async (dispatch) => {\n    await _followUnfollowFlow(dispatch, userId, apiMethod, followSuccess);\n  };\n};\n\nexport const unfollow = (userId: number): ThunkType => {\n  const apiMethod = usersAPI.unfollow.bind(usersAPI);\n\n  return async (dispatch) => {\n    await _followUnfollowFlow(dispatch, userId, apiMethod, unfollowSuccess);\n  };\n};\n\nexport default usersReducer;\n","C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\redux\\auth-reducer.ts",["192","193"],"// import { type } from 'os';\nimport { Action, Dispatch } from 'redux';\nimport { stopSubmit } from 'redux-form';\nimport { ThunkAction } from 'redux-thunk';\nimport { authAPI, profileAPI, ResultCodeCaptcha, ResultCodeEnum } from '../API/api';\nimport { AppStateType } from './redux-store';\n\nconst SET_USER_DATA = 'SET_USER_DATA';\nconst SET_USER_PHOTO = 'SET_USER_PHOTO';\nconst TOGGLE_LOGIN_IN_PROGRESS = 'TOGGLE_LOGIN_IN_PROGRESS';\nconst AUTH_GET_CAPTCHA_SUCCESS = 'AUTH_GET_CAPTCHA_SUCCESS';\n\n// export type initialStateType = {\n//   id: number | null,\n//   email: string | null,\n//   login: string | null,\n//   isAuth: boolean,\n//   photo: any,\n//   isFetching: boolean,\n//   loginInProgress: boolean,\n//   captchaUrl: string | null\n// }\n\nconst initialState = {\n  id: null as number | null,\n  email: null as string | null,\n  login: null as string | null,\n  isAuth: false as boolean,\n  photo: null as string | null,\n  isFetching: true as boolean,\n  loginInProgress: false as boolean,\n  captchaUrl: null as string | null \n};\n\nexport type initialStateType = typeof initialState;\n\nconst authReducer = (state = initialState, action: ActionsTypes) : initialStateType => {\n  switch (action.type) {\n    case SET_USER_DATA:\n    case AUTH_GET_CAPTCHA_SUCCESS:\n      return {\n        ...state,\n        ...action.payload,\n      };\n\n    case SET_USER_PHOTO:\n      return {\n        ...state,\n        photo: action.photo,\n      };\n\n    case TOGGLE_LOGIN_IN_PROGRESS:\n      return {\n        ...state,\n        loginInProgress: action.progress,\n      };\n\n    default:\n      return state;\n  }\n};\n\ntype ActionsTypes = setAuthUserDataActionType | getCaptchaUrlSuccessActionType | setUserPhotoType | toggleLoginInProgressType;\n\ntype payloadActionType = {\n  id: number | null\n  email: string | null\n  login: string | null\n  isAuth: boolean\n};\n\ntype setAuthUserDataActionType = {\n  type: typeof SET_USER_DATA,\n  payload: payloadActionType\n}\n\nexport const setAuthUserData = (id: number | null, email: string | null, login: string | null, isAuth: boolean): setAuthUserDataActionType => {\n  return { type: SET_USER_DATA, payload: { id, email, login, isAuth } };\n};\n\ntype getCaptchaUrlSuccessActionType = {\n  type: typeof AUTH_GET_CAPTCHA_SUCCESS\n  payload: {captchaUrl: string}\n}\n\nconst getCaptchaUrlSuccess = (captchaUrl: string): getCaptchaUrlSuccessActionType => {\n  return {type: AUTH_GET_CAPTCHA_SUCCESS, payload: {captchaUrl}}\n}\n\ntype setUserPhotoType = {\n  type: typeof SET_USER_PHOTO\n  photo: string\n}\n\nexport const setUserPhoto = (photo: string): setUserPhotoType => {\n  return { type: SET_USER_PHOTO, photo };\n};\n\ntype toggleLoginInProgressType = {\n  type: typeof TOGGLE_LOGIN_IN_PROGRESS\n  progress: boolean\n}\n\nexport const toggleLoginInProgress = (progress: boolean): toggleLoginInProgressType => {\n  return { type: TOGGLE_LOGIN_IN_PROGRESS, progress };\n};\n\n\n// type DispatchType = Dispatch<ActionsTypes>\n// type GetStateType = () => AppStateType;\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionsTypes>\n\nexport const getAuthUserData = (): ThunkType => {\n  return async (dispatch, getState) => {\n    const res = await authAPI.me();\n    if (res.resultCode === ResultCodeEnum.Success) {\n      const { id, email, login } = res.data;\n      dispatch(setAuthUserData(id, email, login, true));\n\n      const result = await profileAPI.getProfileData(id);\n      dispatch(\n        setUserPhoto(\n          result.data.photos.small ||\n            'https://www.meme-arsenal.com/memes/0b37d82bcfd11cb3196fa5329f3bff0f.jpg'\n        )\n      );\n    }\n  };\n};\n\nexport const login = (email: string, password: string, rememberMe: boolean, captcha?: string): ThunkType => {\n  return async (dispatch, getState) => {\n    dispatch(toggleLoginInProgress(true));\n    const res = await authAPI.login(email, password, rememberMe, captcha);\n    if (res.resultCode === ResultCodeEnum.Success) {\n      dispatch(getAuthUserData());\n      dispatch(toggleLoginInProgress(false));\n      getState().auth.captchaUrl = null;\n    } else {\n      if (res.resultCode === ResultCodeCaptcha.CaptchaIsRequired) dispatch(getCaptcha())\n      \n      dispatch(\n        // @ts-ignore\n        stopSubmit('login', { _error: res.messages[0] || 'Some error' })\n      );\n      dispatch(toggleLoginInProgress(false));\n    }\n  };\n};\n\nexport const logout = () => {\n  return async (dispatch: any) => {\n    const res = await authAPI.logout();\n    if (res.data.resultCode === 0)\n      dispatch(setAuthUserData(null, null, null, false));\n  };\n};\n\nconst getCaptcha = () => async (dispatch: any) => {\n  const res = await authAPI.getCaptcha();\n  dispatch(getCaptchaUrlSuccess(res.data.url));\n}\n\nexport default authReducer;\n","C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\components\\Users\\UsersContainer.tsx",[],"C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\components\\Profile\\Settings\\Settings.jsx",[],"C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\components\\HOC\\withSuspense.jsx",[],"C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\components\\Header\\HeaderComponent.jsx",[],"C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\components\\Profile\\Dialogs\\DialogsContainer.jsx",[],"C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\components\\Navbar\\Navbar.jsx",[],"C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\components\\News\\News.jsx",[],"C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\components\\Music\\Music.jsx",[],"C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\components\\common\\preloader\\Preloader.jsx",[],"C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\components\\Login\\LoginTSX.jsx",[],["194","195"],"C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\utils\\object-helpers.js",[],"C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\redux\\users-selectors.ts",[],"C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\components\\Users\\Users.tsx",[],"C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\components\\HOC\\withAuthRedirect.jsx",[],"C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\components\\Profile\\Profile.jsx",[],"C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\components\\Header\\Header.jsx",[],"C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\components\\Profile\\Dialogs\\Dialogs.jsx",[],"C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\components\\Users\\User.tsx",[],"C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\components\\common\\Paginator\\Paginator.tsx",[],"C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\components\\Profile\\ProfileStatus\\ProfileStatus.tsx",[],"C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\components\\Profile\\Dialogs\\DialogsForm.jsx",[],"C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\components\\Profile\\MyPosts\\MyPostsContainer.jsx",[],"C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\components\\Profile\\Dialogs\\DialogItem\\DialogItem.jsx",[],"C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\components\\Profile\\Dialogs\\Message\\Message.jsx",[],"C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.jsx",[],"C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\utils\\validators.js",[],"C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\components\\Profile\\MyPosts\\MyPosts.jsx",[],"C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\components\\common\\formControls\\formControls.jsx",[],"C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\components\\Profile\\ProfileInfo\\ProfileDataForm.jsx",[],"C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\components\\Profile\\MyPosts\\Post\\Post.jsx",[],"C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\components\\Profile\\MyPosts\\MyPostsForm.jsx",[],"C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\components\\Profile\\ProfileContainer.tsx",[],"C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\Types\\Types.ts",[],"C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\API\\api.ts",["196"],"C:\\Users\\OGE-Gestkov\\Desktop\\Repositiries\\React\\react-kapzda\\src\\components\\Login\\Login.jsx",[],{"ruleId":"197","replacedBy":"198"},{"ruleId":"199","replacedBy":"200"},{"ruleId":"197","replacedBy":"198"},{"ruleId":"199","replacedBy":"200"},{"ruleId":"201","severity":1,"message":"202","line":1,"column":10,"nodeType":"203","messageId":"204","endLine":1,"endColumn":18},{"ruleId":"201","severity":1,"message":"202","line":1,"column":10,"nodeType":"203","messageId":"204","endLine":1,"endColumn":18},{"ruleId":"201","severity":1,"message":"205","line":153,"column":6,"nodeType":"203","messageId":"204","endLine":153,"endColumn":18},{"ruleId":"201","severity":1,"message":"206","line":2,"column":10,"nodeType":"203","messageId":"204","endLine":2,"endColumn":16},{"ruleId":"201","severity":1,"message":"202","line":2,"column":18,"nodeType":"203","messageId":"204","endLine":2,"endColumn":26},{"ruleId":"197","replacedBy":"207"},{"ruleId":"199","replacedBy":"208"},{"ruleId":"201","severity":1,"message":"209","line":1,"column":17,"nodeType":"203","messageId":"204","endLine":1,"endColumn":30},"no-native-reassign",["210"],"no-negated-in-lhs",["211"],"@typescript-eslint/no-unused-vars","'Dispatch' is defined but never used.","Identifier","unusedVar","'GetStateType' is defined but never used.","'Action' is defined but never used.",["210"],["211"],"'AxiosResponse' is defined but never used.","no-global-assign","no-unsafe-negation"]