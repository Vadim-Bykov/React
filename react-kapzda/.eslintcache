[{"C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\index.js":"1","C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\reportWebVitals.js":"2","C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\App.js":"3","C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\redux\\redux-store.ts":"4","C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\redux\\app-reducer.ts":"5","C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\components\\Users\\UsersContainer.tsx":"6","C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\redux\\profile-reducer.ts":"7","C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\redux\\dialog-reducer.ts":"8","C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\redux\\users-reducer.ts":"9","C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\redux\\auth-reducer.ts":"10","C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\components\\Login\\Login.tsx":"11","C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\components\\Profile\\ProfileContainer.tsx":"12","C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\components\\Navbar\\Navbar.jsx":"13","C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\components\\News\\News.jsx":"14","C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\components\\Header\\HeaderComponent.jsx":"15","C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\components\\Music\\Music.jsx":"16","C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\components\\HOC\\withSuspense.jsx":"17","C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\components\\Profile\\Settings\\Settings.jsx":"18","C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\components\\Profile\\Dialogs\\DialogsContainer.jsx":"19","C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\components\\common\\preloader\\Preloader.jsx":"20","C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\utils\\object-helpers.js":"21","C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\redux\\users-selectors.ts":"22","C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\components\\Users\\Users.tsx":"23","C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\API\\api.ts":"24","C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\components\\common\\formControls\\formControls.tsx":"25","C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\components\\HOC\\withAuthRedirect.jsx":"26","C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\components\\Profile\\Profile.jsx":"27","C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\components\\Profile\\Dialogs\\Dialogs.jsx":"28","C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\components\\Header\\Header.jsx":"29","C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\components\\Users\\User.tsx":"30","C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\components\\common\\Paginator\\Paginator.tsx":"31","C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\components\\Profile\\ProfileStatus\\ProfileStatus.tsx":"32","C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\components\\Profile\\MyPosts\\MyPostsContainer.jsx":"33","C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.jsx":"34","C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\components\\Profile\\Dialogs\\DialogsForm.jsx":"35","C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\components\\Profile\\Dialogs\\Message\\Message.jsx":"36","C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\components\\Profile\\Dialogs\\DialogItem\\DialogItem.jsx":"37","C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\components\\Profile\\MyPosts\\MyPosts.jsx":"38","C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\components\\Profile\\ProfileInfo\\ProfileDataForm.jsx":"39","C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\components\\Profile\\MyPosts\\MyPostsForm.jsx":"40","C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\components\\Profile\\MyPosts\\Post\\Post.jsx":"41","C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\utils\\validators.ts":"42"},{"size":805,"mtime":1612475872066,"results":"43","hashOfConfig":"44"},{"size":362,"mtime":499162500000,"results":"45","hashOfConfig":"44"},{"size":3523,"mtime":1614965167462,"results":"46","hashOfConfig":"44"},{"size":1033,"mtime":1614686181420,"results":"47","hashOfConfig":"44"},{"size":1246,"mtime":1614879148335,"results":"48","hashOfConfig":"44"},{"size":3793,"mtime":1614792698157,"results":"49","hashOfConfig":"44"},{"size":4629,"mtime":1614965167465,"results":"50","hashOfConfig":"44"},{"size":1283,"mtime":1614879148339,"results":"51","hashOfConfig":"44"},{"size":5712,"mtime":1614879148343,"results":"52","hashOfConfig":"44"},{"size":4666,"mtime":1615050165139,"results":"53","hashOfConfig":"44"},{"size":3446,"mtime":1615051915266,"results":"54","hashOfConfig":"44"},{"size":2466,"mtime":1614879148333,"results":"55","hashOfConfig":"44"},{"size":982,"mtime":1610734277480,"results":"56","hashOfConfig":"44"},{"size":148,"mtime":1610882159275,"results":"57","hashOfConfig":"44"},{"size":482,"mtime":1611931067709,"results":"58","hashOfConfig":"44"},{"size":152,"mtime":1610882143643,"results":"59","hashOfConfig":"44"},{"size":265,"mtime":1612522512763,"results":"60","hashOfConfig":"44"},{"size":173,"mtime":1610898702966,"results":"61","hashOfConfig":"44"},{"size":825,"mtime":1612475206929,"results":"62","hashOfConfig":"44"},{"size":321,"mtime":1610899426896,"results":"63","hashOfConfig":"44"},{"size":258,"mtime":1612337500279,"results":"64","hashOfConfig":"44"},{"size":1045,"mtime":1615041529027,"results":"65","hashOfConfig":"44"},{"size":1000,"mtime":1614708827697,"results":"66","hashOfConfig":"44"},{"size":3006,"mtime":1615041536791,"results":"67","hashOfConfig":"44"},{"size":2412,"mtime":1615051611970,"results":"68","hashOfConfig":"44"},{"size":747,"mtime":1611506146716,"results":"69","hashOfConfig":"44"},{"size":622,"mtime":1612554390537,"results":"70","hashOfConfig":"44"},{"size":857,"mtime":1611866136812,"results":"71","hashOfConfig":"44"},{"size":717,"mtime":1611931067705,"results":"72","hashOfConfig":"44"},{"size":1855,"mtime":1614709480557,"results":"73","hashOfConfig":"44"},{"size":1782,"mtime":1614690638543,"results":"74","hashOfConfig":"44"},{"size":2699,"mtime":1614708468051,"results":"75","hashOfConfig":"44"},{"size":1247,"mtime":1611851833671,"results":"76","hashOfConfig":"44"},{"size":2292,"mtime":1612598864779,"results":"77","hashOfConfig":"44"},{"size":716,"mtime":1611931067723,"results":"78","hashOfConfig":"44"},{"size":157,"mtime":1609530191932,"results":"79","hashOfConfig":"44"},{"size":311,"mtime":1611506146724,"results":"80","hashOfConfig":"44"},{"size":899,"mtime":1612267948141,"results":"81","hashOfConfig":"44"},{"size":1352,"mtime":1612559737701,"results":"82","hashOfConfig":"44"},{"size":710,"mtime":1611931067725,"results":"83","hashOfConfig":"44"},{"size":373,"mtime":1610898627648,"results":"84","hashOfConfig":"44"},{"size":422,"mtime":1615044479410,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"1rcbxz3",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"95"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"95"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"95"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"95"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\index.js",[],["176","177"],"C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\reportWebVitals.js",[],"C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\App.js",[],"C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\redux\\redux-store.ts",[],["178","179"],"C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\redux\\app-reducer.ts",["180"],"import { Dispatch } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\nimport { getAuthUserData } from './auth-reducer';\nimport { AppStateType } from './redux-store';\n\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\n\ntype initialStateType = {\n  initialized: boolean,\n}\n\nconst initialState: initialStateType = {\n  initialized: false,\n  // globalError: null\n};\n\ntype ActionsAppTypes = InitializedSuccessActionType;\n\nconst appReducer = (state = initialState, action: ActionsAppTypes): initialStateType => {\n  switch (action.type) {\n    case INITIALIZED_SUCCESS:\n      return {\n        ...state,\n        initialized: true,\n      };\n\n    default:\n      return state;\n  }\n};\n\ntype InitializedSuccessActionType = {\n  type: typeof INITIALIZED_SUCCESS\n}\n\nexport const setInitializedSuccess = (): InitializedSuccessActionType => {\n  return { type: INITIALIZED_SUCCESS };\n};\n\n// type DispatchType = Dispatch<ActionsAppTypes>;\n// type GetStateType = () => AppStateType;\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionsAppTypes>;\n\nexport const initializeApp = (): ThunkType => {\n  return async (dispatch) => {\n    await dispatch(getAuthUserData());\n    dispatch(setInitializedSuccess());\n  };\n};\n\nexport default appReducer;\n","C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\components\\Users\\UsersContainer.tsx",[],"C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\redux\\profile-reducer.ts",["181"],"import { Dispatch } from 'redux';\nimport { stopSubmit } from 'redux-form';\nimport { ThunkAction } from 'redux-thunk';\nimport { profileAPI } from '../API/api';\nimport { photosType, postType, profileType } from '../Types/Types';\nimport { AppStateType } from './redux-store';\n\nconst ADD_POST = 'ADD-POST';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nconst SET_STATUS = 'SET_STATUS';\nconst DELETE_POST = 'DELETE_POST';\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\n\n\nconst initialState = {\n  posts: [\n    { id: 1, message: 'Hello', likesCount: 11 },\n    { id: 2, message: 'How are you?', likesCount: 12 },\n    { id: 3, message: 'Hi!', likesCount: 13 },\n    { id: 4, message: 'Yoo', likesCount: 14 },\n  ] as Array<postType>,\n  profile: null as profileType | null,\n  status: '',\n  postText: ''\n};\n\nexport type initialStateType = typeof initialState;\n\nconst profileReducer = (state = initialState, action: ActionTypes): initialStateType => {\n  switch (action.type) {\n    case ADD_POST:\n      return {\n        ...state,\n        posts: [\n          ...state.posts,\n          {\n            id: state.posts.length + 1,\n            message: action.newPost,\n            likesCount: 0,\n          },\n        ],\n        postText: '',\n      };\n\n    case SET_USER_PROFILE:\n      return {\n        ...state,\n        profile: action.profile,\n      };\n\n    case SET_STATUS:\n      return {\n        ...state,\n        status: action.status,\n      };\n\n    case DELETE_POST:\n      return {\n        ...state,\n        posts: state.posts.filter((post) => post.id !== action.postId),\n      };\n    \n    case SAVE_PHOTO_SUCCESS:\n      return {\n        ...state,\n        profile: {...state.profile, photos: action.photo } as profileType,\n      };\n  \n\n    default:\n      return state;\n  }\n};\n\ntype ActionTypes = addPostActionCreatorActionType | setUserProfileActionType | setStatusActionType | deletePostActionType | savePhotoSuccessActionType;\n\ntype addPostActionCreatorActionType = {\n  type: typeof ADD_POST\n  newPost: string\n}\n\nexport const addPostActionCreator = (newPost: string): addPostActionCreatorActionType => {\n  return { type: ADD_POST, newPost };\n};\n\ntype setUserProfileActionType = {\n  type: typeof SET_USER_PROFILE\n  profile: profileType\n}\n\nconst setUserProfile = (profile: profileType): setUserProfileActionType => {\n  return { type: SET_USER_PROFILE, profile };\n};\n\ntype setStatusActionType = {\n  type: typeof SET_STATUS\n  status: string\n}\n\nexport const setStatus = (status: string): setStatusActionType => {\n  return { type: SET_STATUS, status };\n};\n\ntype deletePostActionType = {\n  type: typeof DELETE_POST\n  postId: number\n}\n\nexport const deletePost = (postId: number): deletePostActionType => {\n  return { type: DELETE_POST, postId };\n};\n\ntype savePhotoSuccessActionType = {\n  type: typeof SAVE_PHOTO_SUCCESS\n  photo: photosType\n}\n\nexport const savePhotoSuccess = (photo:photosType): savePhotoSuccessActionType => {\n  return { type: SAVE_PHOTO_SUCCESS, photo };\n};\n\n// type DispatchType = Dispatch<ActionTypes>;\n// type GetStateType = () => AppStateType;\nexport type ThunkType = ThunkAction<void, AppStateType, unknown, ActionTypes>;\n\nexport const getUserProfileInfo = (userId: number): ThunkType => {\n  return async (dispatch, getState) => {\n    const res = await profileAPI.getProfileData(userId);\n    dispatch(setUserProfile(res.data));\n  };\n};\n\nexport const getUserStatus = (userId: number): ThunkType => {\n  return async (dispatch) => {\n    const res = await profileAPI.getStatus(userId);\n    dispatch(setStatus(res.data));\n  };\n};\n\nexport const updateUserStatus = (status: string): ThunkType => {\n  return async (dispatch) => {\n    try {\n      const res = await profileAPI.updateStatus(status);\n      if (res.data.resultCode === 0) dispatch(setStatus(status));\n    } catch (error) {\n      alert(error)\n    }\n  };\n};\n\nexport const savePhoto = (photo: any): ThunkType => {\n  return async (dispatch) => {\n    const res = await profileAPI.savePhoto(photo);\n    if (res.resultCode === 0) dispatch(savePhotoSuccess(res.data.photos));\n  };\n};\n\nexport const saveProfile = (profile:profileType): ThunkType => {\n  return async (dispatch, getState) => {\n    const userId = getState().auth.id;\n    const res = await profileAPI.saveProfile(profile);\n    if (res.data.resultCode === 0) {\n      \n      // @ts-ignore\n      dispatch(getUserProfileInfo(userId));\n    } else {\n      // @ts-ignore\n      dispatch(stopSubmit('edit-profile', { _error: res.data.messages[0] }));\n      \n      return Promise.reject()\n      // dispatch(stopSubmit('edit-profile', {'contacts':{facebook: res.data.messages[0]}}));\n    }\n  };\n};\n\n\nexport default profileReducer;\n","C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\redux\\dialog-reducer.ts",[],"C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\redux\\users-reducer.ts",["182"],"import { userType } from './../Types/Types';\nimport { usersAPI } from '../API/api';\nimport { updateObjectInArray } from '../utils/object-helpers';\nimport { AppStateType } from './redux-store';\nimport { Dispatch } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\n\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst TOGGLE_FOLLOWING_PROGRESS = 'TOGGLE_FOLLOWING_PROGRESS';\n\n\nconst initialState = {\n  users: [] as Array<userType>,\n  pageSize: 100,\n  currentPage: 1,\n  totalUsersCount: 0,\n  isFetching: false,\n  followingInProgress: [] as Array<number>, // Array of userId\n  // fake: 10,\n};\n\ntype initialStateType = typeof initialState;\n\nconst usersReducer = (state = initialState, action: ActionsTypes): initialStateType => {\n  switch (action.type) {\n    // case 'fake':\n    //   return { ...state, fake: state.fake + 1 };\n\n    case FOLLOW:\n      return {\n        ...state,\n        users: updateObjectInArray(state.users, 'id', action.userId, { followed: true })\n        // users: state.users.map((user) => {\n        //   if (user.id === action.userId) {\n        //     return { ...user, followed: true };\n        //   }\n        //   return user;\n        // }),\n      };\n\n    case UNFOLLOW:\n      return {\n        ...state,\n        users: updateObjectInArray(state.users, 'id', action.userId, { followed: false })\n        // users: state.users.map((user) => {\n        //   if (user.id === action.userId) {\n        //     return { ...user, followed: false };\n        //   }\n        //   return user;\n        // }),\n      };\n\n    case SET_USERS:\n      return { ...state, users: [...action.users] };\n\n    case SET_CURRENT_PAGE:\n      return { ...state, currentPage: action.pageNumber };\n\n    case SET_TOTAL_USERS_COUNT:\n      return { ...state, totalUsersCount: action.totalUsersCount };\n\n    case TOGGLE_IS_FETCHING:\n      return { ...state, isFetching: action.isFetching };\n\n    case TOGGLE_FOLLOWING_PROGRESS:\n      return {\n        ...state,\n        followingInProgress: action.isFetching\n          ? [...state.followingInProgress, action.userId]\n          : state.followingInProgress.filter((id) => id !== action.userId),\n      };\n\n    default:\n      return state;\n  }\n};\n\ntype ActionsTypes = followSuccessActionType | unfollowSuccessActionType | setUsersActionType | setCurrentPageActionType | setTotalUsersCountActionType | toggleIsFetchingActionType | toggleFollowingProgressActionType;\n\ntype followSuccessActionType = {\n  type: typeof FOLLOW\n  userId: number\n}\n\nexport const followSuccess = (userId: number): followSuccessActionType => {\n  return { type: FOLLOW, userId };\n};\n\ntype unfollowSuccessActionType = {\n  type: typeof UNFOLLOW\n  userId: number\n}\n\nexport const unfollowSuccess = (userId: number): unfollowSuccessActionType => {\n  return { type: UNFOLLOW, userId };\n};\n\ntype setUsersActionType = {\n  type: typeof SET_USERS\n  users: Array<userType>\n}\n\nexport const setUsers = (users: Array<userType>): setUsersActionType => {\n  return { type: SET_USERS, users };\n};\n\ntype setCurrentPageActionType = {\n  type: typeof SET_CURRENT_PAGE\n  pageNumber: number\n}\n\nexport const setCurrentPage = (pageNumber: number): setCurrentPageActionType => ({\n  type: SET_CURRENT_PAGE,\n  pageNumber,\n});\n\ntype setTotalUsersCountActionType = {\n  type: typeof SET_TOTAL_USERS_COUNT\n  totalUsersCount: number\n}\n\nexport const setTotalUsersCount = (totalUsersCount: number): setTotalUsersCountActionType => ({\n  type: SET_TOTAL_USERS_COUNT,\n  totalUsersCount,\n});\n\ntype toggleIsFetchingActionType = {\n  type: typeof TOGGLE_IS_FETCHING\n  isFetching: boolean\n}\n\nexport const toggleIsFetching = (isFetching: boolean): toggleIsFetchingActionType => ({\n  type: TOGGLE_IS_FETCHING,\n  isFetching,\n});\n\ntype toggleFollowingProgressActionType = {\n  type: typeof TOGGLE_FOLLOWING_PROGRESS\n  isFetching: boolean\n  userId: number\n}\n\nexport const toggleFollowingProgress = (isFetching: boolean, userId: number): toggleFollowingProgressActionType => ({\n  type: TOGGLE_FOLLOWING_PROGRESS,\n  isFetching,\n  userId,\n});\n\ntype GetStateType = () => AppStateType;\ntype DispatchType = Dispatch<ActionsTypes>;\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionsTypes>;\n\nexport const requestUsers = (currentPage: number, pageSize: number): ThunkType => {\n  // return async (dispatch: DispatchType, getState: GetStateType) => {\n  return async (dispatch, getState) => {\n    dispatch(toggleIsFetching(true));\n    const res = await usersAPI.getUsersData(currentPage, pageSize);\n    dispatch(toggleIsFetching(false));\n    dispatch(setTotalUsersCount(res.totalCount));\n    dispatch(setCurrentPage(currentPage));\n    dispatch(setUsers(res.items));\n  };\n};\n\nconst _followUnfollowFlow = async (\n  dispatch: DispatchType,\n  userId: number,\n  apiMethod: any,\n  actionCreator: (userId: number) => followSuccessActionType | unfollowSuccessActionType\n) => {\n  dispatch(toggleFollowingProgress(true, userId));\n  const res = await apiMethod(userId);\n  if (res.resultCode === 0) dispatch(actionCreator(userId));\n  dispatch(toggleFollowingProgress(false, userId));\n};\n\nexport const follow = (userId: number): ThunkType => {\n  const apiMethod = usersAPI.follow.bind(usersAPI);\n\n  return async (dispatch) => {\n    await _followUnfollowFlow(dispatch, userId, apiMethod, followSuccess);\n  };\n};\n\nexport const unfollow = (userId: number): ThunkType => {\n  const apiMethod = usersAPI.unfollow.bind(usersAPI);\n\n  return async (dispatch) => {\n    await _followUnfollowFlow(dispatch, userId, apiMethod, unfollowSuccess);\n  };\n};\n\nexport default usersReducer;\n","C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\redux\\auth-reducer.ts",["183","184"],"C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\components\\Login\\Login.tsx",["185"],"C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\components\\Profile\\ProfileContainer.tsx",[],"C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\components\\Navbar\\Navbar.jsx",[],"C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\components\\News\\News.jsx",[],"C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\components\\Header\\HeaderComponent.jsx",[],"C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\components\\Music\\Music.jsx",[],"C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\components\\HOC\\withSuspense.jsx",[],"C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\components\\Profile\\Settings\\Settings.jsx",[],"C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\components\\Profile\\Dialogs\\DialogsContainer.jsx",[],"C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\components\\common\\preloader\\Preloader.jsx",[],"C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\utils\\object-helpers.js",[],"C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\redux\\users-selectors.ts",[],"C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\components\\Users\\Users.tsx",[],"C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\API\\api.ts",["186"],"import axios, { AxiosResponse } from 'axios';\nimport { photosType, profileType } from '../Types/Types';\n\nconst instance = axios.create({\n  baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n  withCredentials: true,\n  headers: {\n    'API-KEY': 'a22ee90a-a97a-49d2-a11e-57e1c21f80c5',\n  },\n});\n\nexport enum ResultCodeEnum {\n  Success = 0,\n  Error = 1,\n}\n\nexport enum ResultCodeCaptcha {\n  CaptchaIsRequired = 10,\n}\n\nexport const usersAPI = {\n  unfollow(id: number) {\n    return instance.delete(`follow/${id}`).then((res) => res.data);\n  },\n\n  follow(id: number) {\n    return instance.post(`follow/${id}`).then((res) => res.data);\n  },\n\n  getUsersData(currentPage: number, pageSize: number) {\n    return instance\n      .get(`users?page=${currentPage}&count=${pageSize}`)\n      .then((res) => res.data);\n  },\n\n  getDataChangedPage(pageNumber: number, pageSize: number) {\n    return instance\n      .get(`users?page=${pageNumber}&count=${pageSize}`)\n      .then((res) => res.data);\n  },\n};\n\ntype UpdateStatusAndProfileType = {\n  resultCode: ResultCodeEnum;\n  messages: Array<string>;\n  data: any;\n};\n\ntype SavePhotoType = {\n  data: { photos: photosType };\n  resultCode: ResultCodeEnum;\n  messages: Array<string>;\n};\n\nexport const profileAPI = {\n  getProfileData(userId: number) {\n    return instance.get<profileType>(`profile/${userId}`);\n  },\n\n  getStatus(userId: number) {\n    return instance.get<string>(`profile/status/${userId}`);\n  },\n\n  updateStatus(status: string) {\n    return instance.put<UpdateStatusAndProfileType>(`profile/status`, {\n      status: status,\n    });\n  },\n\n  savePhoto(file: any) {\n    const formData = new FormData();\n    formData.append('image', file);\n\n    return instance\n      .put<SavePhotoType>(`profile/photo`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      })\n      .then((res) => res.data);\n  },\n\n  saveProfile(profile: profileType) {\n    return instance.put<UpdateStatusAndProfileType>(`profile`, profile);\n  },\n};\n\ntype MeResponseType = {\n  data: {\n    id: number;\n    email: string;\n    login: string;\n  };\n  resultCode: ResultCodeEnum;\n  messages: Array<string>;\n};\n\ntype LoginResponseType = {\n  data: {\n    userId: number;\n  };\n  resultCode: ResultCodeEnum | ResultCodeCaptcha;\n  messages: Array<string>;\n};\n\ntype LogoutType = {\n  resultCode: number\n  messages: Array<string>\n  data: {}\n};\n\ntype GetCaptchaType = {\n  url: string\n}\n\nexport const authAPI = {\n  me() {\n    return instance.get<MeResponseType>(`auth/me`).then((res) => res.data);\n  },\n\n  login(\n    email: string,\n    password: string,\n    rememberMe: boolean,\n    captcha: string | null = null\n  ) {\n    return instance\n      .post<LoginResponseType>(`auth/login`, {\n        email,\n        password,\n        rememberMe,\n        captcha,\n      })\n      .then((res) => res.data);\n  },\n\n  logout() {\n    return instance.delete<LogoutType>(`auth/login`);\n  },\n\n  getCaptcha() {\n    return instance.get<GetCaptchaType>(`security/get-captcha-url`);\n  },\n};\n","C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\components\\common\\formControls\\formControls.tsx",[],"C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\components\\HOC\\withAuthRedirect.jsx",[],"C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\components\\Profile\\Profile.jsx",[],"C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\components\\Profile\\Dialogs\\Dialogs.jsx",[],"C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\components\\Header\\Header.jsx",[],"C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\components\\Users\\User.tsx",[],"C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\components\\common\\Paginator\\Paginator.tsx",[],"C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\components\\Profile\\ProfileStatus\\ProfileStatus.tsx",[],"C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\components\\Profile\\MyPosts\\MyPostsContainer.jsx",[],"C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.jsx",[],"C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\components\\Profile\\Dialogs\\DialogsForm.jsx",[],"C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\components\\Profile\\Dialogs\\Message\\Message.jsx",[],"C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\components\\Profile\\Dialogs\\DialogItem\\DialogItem.jsx",[],"C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\components\\Profile\\MyPosts\\MyPosts.jsx",[],"C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\components\\Profile\\ProfileInfo\\ProfileDataForm.jsx",[],"C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\components\\Profile\\MyPosts\\MyPostsForm.jsx",[],"C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\components\\Profile\\MyPosts\\Post\\Post.jsx",[],"C:\\Users\\Admin\\OneDrive\\Рабочий стол\\Repositoties\\React\\react-kapzda\\src\\utils\\validators.ts",[],{"ruleId":"187","replacedBy":"188"},{"ruleId":"189","replacedBy":"190"},{"ruleId":"187","replacedBy":"188"},{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","severity":1,"message":"192","line":1,"column":10,"nodeType":"193","messageId":"194","endLine":1,"endColumn":18},{"ruleId":"191","severity":1,"message":"192","line":1,"column":10,"nodeType":"193","messageId":"194","endLine":1,"endColumn":18},{"ruleId":"191","severity":1,"message":"195","line":154,"column":6,"nodeType":"193","messageId":"194","endLine":154,"endColumn":18},{"ruleId":"191","severity":1,"message":"196","line":2,"column":10,"nodeType":"193","messageId":"194","endLine":2,"endColumn":16},{"ruleId":"191","severity":1,"message":"192","line":2,"column":18,"nodeType":"193","messageId":"194","endLine":2,"endColumn":26},{"ruleId":"191","severity":1,"message":"197","line":10,"column":10,"nodeType":"193","messageId":"194","endLine":10,"endColumn":14},{"ruleId":"191","severity":1,"message":"198","line":1,"column":17,"nodeType":"193","messageId":"194","endLine":1,"endColumn":30},"no-native-reassign",["199"],"no-negated-in-lhs",["200"],"@typescript-eslint/no-unused-vars","'Dispatch' is defined but never used.","Identifier","unusedVar","'GetStateType' is defined but never used.","'Action' is defined but never used.","'type' is defined but never used.","'AxiosResponse' is defined but never used.","no-global-assign","no-unsafe-negation"]