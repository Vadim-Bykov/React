{"version":3,"sources":["components/HOC/withAuthRedirect.jsx","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPostsForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/ProfileStatus/ProfileStatus.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","WithAuthRedirect","Component","connect","props","to","module","exports","Post","className","s","item","alt","src","message","likesCount","maxLength","maxLengthCreator","MyPostsFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","type","MyPosts","React","memo","postsElements","posts","map","post","id","postsBlock","e","newPost","myPostForm","addPost","MyPostsContainer","profilePage","addPostActionCreator","ReduxProfileDataForm","profile","error","createField","Input","Object","keys","contacts","key","style","formError","ProfileData","isOwner","goToEditMode","description","onClick","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","title","value","Contact","contact","ProfileInfo","useState","editMode","setEditMode","Preloader","bg","height","descriptionBlock","ava","photos","small","onChange","photo","target","files","length","savePhoto","formData","saveProfile","then","initialValues","ProfileStatus","status","setStatus","useEffect","onDoubleClick","autoFocus","currentTarget","onBlur","updateUserStatus","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","getUserProfileInfo","getUserStatus","refreshProfile","prevProps","prevState","compose","withRouter"],"mappings":"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","file":"static/js/3.3801acba.chunk.js","sourcesContent":["import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst mapStateToPropsForRedirect = (state) => {\n  return {\n    isAuth: state.auth.isAuth,\n  };\n};\n\nexport const WithAuthRedirect = (Component) => {\n\n  // class RedirectComponent extends React.Component {\n  //   render() {\n  //     if (!this.props.isAuth) return <Redirect to='/login' />;\n  //     return <Component {...this.props} />;\n  //   }\n  // }\n  \n  const RedirectComponent = (props) => {\n    if (!props.isAuth) return <Redirect to='/login' />;\n    return <Component {...props} /> \n  }\n\n  const ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(\n    RedirectComponent\n  );\n\n  return ConnectedRedirectComponent;\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1NZiX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1wtiL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ProfileInfo_bg__9HBvp\",\"ava\":\"ProfileInfo_ava__3xWM0\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2-69g\",\"contact\":\"ProfileInfo_contact__1CyLP\"};","import s from './Post.module.css';\nconst Post = (props) => {\n   return (\n      <div className={s.item}>\n         <img className='avatar' alt=\"avatar\" src='https://image.shutterstock.com/image-vector/man-shirt-tie-businessman-avatar-260nw-548848999.jpg' />\n         <p>{props.message}</p>   \n         <p>Like { props.likesCount}</p>\n      </div>\n   );\n}\nexport default Post;","import { Field, reduxForm } from \"redux-form\";\nimport { maxLengthCreator, required } from \"../../../utils/validators\";\nimport { Textarea } from \"../../common/formControls/formControls\";\n\nconst maxLength = maxLengthCreator(15);\n\nconst MyPostsForm = (props) => {\n\n   return (\n      <form onSubmit={props.handleSubmit}>\n         <Field\n            name='myPostForm'\n            component={Textarea}\n            placeholder=\"Enter new post\"\n            validate={[required, maxLength]}\n         />\n         <div>\n            <button type=\"submit\">Add post</button>\n         </div>\n      </form>\n   );\n}\n\nconst MyPostsFormRedux = reduxForm({form: 'profileMyPosForm'})(MyPostsForm)\n \nexport default MyPostsFormRedux;","import s from './MyPosts.module.css';\nimport Post from './Post/Post';\nimport React from 'react'\nimport MyPostsForm from './MyPostsForm';\n// import { addPostActionCreator, updatePostActionCreator } from '../../../redux/profile-reducer';\n\n// shouldComponentUpdate(prevProps, prevState) {\n//    return prevProps !== this.props || prevState !== this.state\n// }\n\nconst MyPosts = React.memo((props) => {\n   // console.log('MyPost')\n\n   const postsElements = props.posts.map(post => <Post message={post.message} key={post.id} likesCount={post.likesCount} />);\n\n   const onSubmitPost = (e) => {\n      const newPost = e.myPostForm;\n      props.addPost(newPost);\n   }\n\n   return (\n      <div className={s.postsBlock}>\n         My posts\n         <MyPostsForm onSubmit={onSubmitPost} />\n         <div className={s.posts}>\n            {postsElements}\n         </div>\n      </div>\n   );\n})\nexport default MyPosts;","import { connect } from 'react-redux';\nimport { addPostActionCreator } from '../../../redux/profile-reducer';\nimport MyPosts from './MyPosts';\n\n// const MyPostsContainer1 = (props) => {\n\n//    const addPost = () => {\n//       props.dispatch(addPostActionCreator());\n//    };\n\n//    const changePostText = (text) => {\n//       props.dispatch(updatePostActionCreator(text));\n//    };\n\n//    return <MyPosts\n//       addPost={addPost}\n//       changePostText={changePostText}\n//       posts={props.posts}\n//       postText={props.postText}\n//    />\n// }\n\nconst mapStateToProps = (state)=> {\n   return {\n      posts: state.profilePage.posts,\n      // postText: state.profilePage.postText\n  } \n}\n\n// const mapDispatchToProps = (dispatch) => {\n//    return {\n//       addPost: () => {\n//          dispatch(addPostActionCreator())\n//       },\n//       changePostText: (text) => {\n//          const action = updatePostActionCreator(text);\n//          dispatch(action)\n//       }\n\n//    }\n// }\n\n// const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\nconst MyPostsContainer = connect(mapStateToProps, {\n   addPost: addPostActionCreator,\n   // changePostText: updatePostActionCreator,\n})(MyPosts);\n\nexport default MyPostsContainer;","import { reduxForm } from 'redux-form';\nimport { Input, Textarea, createField } from '../../common/formControls/formControls';\nimport style from '../../common/formControls/formControls.module.css'\n// import s from './ProfileInfo.module.css';\n\n\nconst ProfileDataForm = ({ profile, handleSubmit, error }) => {\n   return (\n      <form onSubmit={handleSubmit}>\n         \n         <div><b>full Name:</b>{createField([], 'fullName', Input, 'Write full Name')}</div>\n\n         <div><b>Looking For A Job:</b>{createField([], 'lookingForAJob', Input, '', { type: 'checkbox' })}\n         </div>\n\n         <div><b>Skills:</b>{createField([], 'lookingForAJobDescription', Textarea, 'Write Skills')}</div>\n\n         <div><b>about Me:</b>{createField([], 'aboutMe', Textarea, 'Write about Me')}</div>\n\n         <div><b>contacts:</b> {Object\n            .keys(profile.contacts)\n            .map(key => {\n               return <div key={key}>\n                  {createField([], `contacts.${key}`, Input, key)}\n               </div>\n            })}\n         </div>\n         { error &&\n            <div className={style.formError}>\n               {error}\n            </div>\n         }\n         <div><button>save</button></div>\n      </form>\n   );\n}\n\nconst ReduxProfileDataForm = reduxForm({ form: 'edit-profile' })(ProfileDataForm);\n\nexport default ReduxProfileDataForm;","import { useState } from 'react';\nimport Preloader from '../../common/preloader/Preloader';\nimport ReduxProfileDataForm from './ProfileDataForm';\nimport s from './ProfileInfo.module.css';\n\nconst defaultPhoto = 'https://www.meme-arsenal.com/memes/0b37d82bcfd11cb3196fa5329f3bff0f.jpg';\n\nconst ProfileInfo = (props) => {\n   const [editMode, setEditMode] = useState(false);\n\n   if (!props.profile) return <Preloader />;\n\n   const choosePhoto = (e) => {\n      const photo = e.target.files[0]; // массив\n      if (e.target.files.length) props.savePhoto(photo);\n   }\n\n   const onSubmit = (formData) => {\n \n      props.saveProfile(formData).then(() => {\n         setEditMode(false)\n      });\n   }\n\n   return (\n      <div>\n         <div>\n            <img className={s.bg} src=\"https://reactapp.ir/wp-content/uploads/reactjs.jpg\" height=\"150px\" alt=\"react\" />\n         </div>\n         <div className={s.descriptionBlock}>\n            <div>\n               <img className={s.ava} src={props.profile.photos.small || defaultPhoto} alt=\"ava\" />\n               \n               {props.isOwner && <input type=\"file\" onChange={choosePhoto} />}\n            </div>\n            {editMode\n               ? <ReduxProfileDataForm profile={props.profile} isOwner={props.isOwner} onSubmit={onSubmit} saveProfile={props.saveProfile} initialValues={props.profile} />\n               : <ProfileData isOwner={props.isOwner} goToEditMode={()=> setEditMode(true)} profile={props.profile} />}\n         </div>\n      </div>\n   );\n}\n\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\n   return (\n      <div className={s.description}>\n         {isOwner && <div><button onClick={goToEditMode}>edit</button></div>}\n         <div><b>full Name:</b> {profile.fullName}</div>\n         <div><b>about Me:</b> {profile.aboutMe}</div>\n         <div><b>Looking For A Job:</b> {profile.lookingForAJob ? 'yes' : 'no'}</div>\n         <div><b>Skills:</b> {profile.lookingForAJobDescription}</div>\n         <div><b>contacts:</b> {Object\n            .keys(profile.contacts)\n            .map(key => <Contact key={key} title={key} value={profile.contacts[key]} />)}</div>\n      </div>\n   );\n}\n\nconst Contact = ({ title, value }) => {\n   return <div className={s.contact}><b>{title}:</b>{value}</div>\n};\n\nexport default ProfileInfo;","import React, { useEffect, useState } from 'react';\n\nconst ProfileStatus = React.memo((props) => {\n\n   const [editMode, setEditMode] = useState(false);\n   const [status, setStatus] = useState(props.status);\n\n   useEffect(() => {\n      setStatus(props.status)\n   }, [props.status]);\n\n   const activeEditMode = () => {\n      setEditMode(true);\n   }   \n\n   const disActivateEditMode = () => {\n      setEditMode(false);\n      props.updateUserStatus(status);\n   };\n   \n   const onStatusChange = (e) => {\n      setStatus(e.currentTarget.value);\n   };\n\n   \n      return (\n         <div>\n            {!editMode &&\n               <div>\n                  <span onDoubleClick={activeEditMode}>{props.status || 'No status'}</span>\n               </div>}\n            \n            {editMode &&\n               <div>\n                  <input\n                     autoFocus={true}\n                     value={status}\n                     onChange={onStatusChange}\n                     onBlur={disActivateEditMode}\n                  />\n               </div>\n            }\n         </div>\n      );\n});\nexport default ProfileStatus;\n\n// class ProfileStatus extends React.Component {\n\n//    state = {\n//       editMode: false,\n//       status: this.props.status\n//    }\n\n//    componentDidUpdate = (prevProps, prevState) => {\n//       if (prevProps.status !== this.props.status) {\n//          this.setState({\n//             status: this.props.status\n//          })\n//       }\n//    }\n\n//    activeEditMode=()=> {\n//       this.setState({\n//          editMode: true\n//       })\n//    }\n\n//    disActivateEditMode = () => {\n//       this.setState({\n//          editMode: false\n//       });\n\n//       this.props.updateUserStatus(this.state.status)\n//    }\n\n//    onStatusChange = (e) => {\n//       this.setState({\n//          status:e.currentTarget.value\n//       })\n//    }\n\n//    render(){\n//       return (\n//          <div>\n//             {!this.state.editMode &&\n//                <div>\n//                   <span onDoubleClick={this.activeEditMode}>{this.props.status || 'No status'}</span>\n//                </div>}\n            \n//             {this.state.editMode &&\n//                <div>\n//                   <input\n//                      autoFocus={true}\n//                      value={this.state.status}\n//                      onChange={this.onStatusChange}\n//                      onBlur={this.disActivateEditMode}\n//                   />\n//                </div>\n//             }\n//          </div>\n//       );\n//    }\n// };","// import Preloader from '../common/preloader/Preloader';\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\nimport ProfileStatus from './ProfileStatus/ProfileStatus';\nconst Profile = (props) => {\n   // if(!props.profile) return <Preloader/>\n   return (\n      <div>\n         <ProfileInfo profile={props.profile} isOwner={props.isOwner} savePhoto={props.savePhoto} saveProfile={props.saveProfile} />\n         <ProfileStatus status={props.status} updateUserStatus={props.updateUserStatus} />\n         <MyPostsContainer />\n      </div>);\n};\nexport default Profile;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { getUserProfileInfo, getUserStatus, savePhoto, saveProfile, updateUserStatus } from '../../redux/profile-reducer';\nimport { WithAuthRedirect } from '../HOC/withAuthRedirect';\nimport Profile from './Profile';\n\nclass ProfileContainer extends React.Component {\n   \n   refreshProfile() {\n      let userId = this.props.match.params.userId;\n      // if (!userId) userId = 14188;\n      if (!userId) {\n         userId = this.props.authorizedUserId\n         // if (!userId) this.props.history.push('/login');\n      };\n      this.props.getUserProfileInfo(userId);\n      this.props.getUserStatus(userId);\n   }\n\n   componentDidMount() {\n      this.refreshProfile();\n   }\n\n   componentDidUpdate(prevProps, prevState) {\n      if (prevProps.match.params.userId !== this.props.match.params.userId) {\n      this.refreshProfile();\n      }\n   }\n\n   render() {\n      return <Profile\n         {...this.props}\n         isOwner={!this.props.match.params.userId}\n         savePhoto={this.props.savePhoto}\n      />\n   }\n};\n\n\nconst mapStateToProps = (state) => {\n   return {\n      profile: state.profilePage.profile,\n      status: state.profilePage.status,\n      authorizedUserId: state.auth.id,\n      isAuth: state.auth.isAuth\n   }\n}\n\n// const AuthRedirectComponent = WithAuthRedirect(ProfileContainer);\n// const withUrlDataContainerComponent = withRouter(AuthRedirectComponent);\n// export default connect(mapStateToProps, { getUserProfileInfo })(withUrlDataContainerComponent);\n\nexport default compose(\n   connect(mapStateToProps, { getUserProfileInfo, getUserStatus, updateUserStatus, savePhoto, saveProfile}),\n   withRouter,\n   WithAuthRedirect\n)(ProfileContainer)"],"sourceRoot":""}