{"version":3,"sources":["components/HOC/withAuthRedirect.jsx","components/Profile/Dialogs/Dialogs.module.css","components/Profile/Dialogs/DialogItem/DialogItem.jsx","components/Profile/Dialogs/Message/Message.jsx","components/Profile/Dialogs/DialogsForm.jsx","components/Profile/Dialogs/Dialogs.jsx","components/Profile/Dialogs/DialogsContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","WithAuthRedirect","Component","connect","props","to","module","exports","DialogItem","path","id","className","s","itemName","activeClassName","active","name","Message","message","maxLength","maxLengthCreator","DialogsFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","type","Dialogs","dialogsElements","dialogs","map","dialog","messagesElements","messages","dialogsItems","e","addMessage","dialogForm","compose","dialogPage","dispatch","newMessage","addMessageActionCreator"],"mappings":"qLAIMA,EAA6B,SAACC,GAClC,MAAO,CACLC,OAAQD,EAAME,KAAKD,SAIVE,EAAmB,SAACC,GAkB/B,OAJmCC,YAAQN,EAARM,EALT,SAACC,GACzB,OAAKA,EAAML,OACJ,cAACG,EAAD,eAAeE,IADI,cAAC,IAAD,CAAUC,GAAG,gB,oBCnB3CC,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,SAAW,0BAA0B,OAAS,wBAAwB,SAAW,0BAA0B,cAAgB,iC,sHCU9MC,EARI,SAACJ,GACjB,IAAIK,EAAI,oBAAgBL,EAAMM,IAC9B,OAAO,qBAAKC,UAAWC,IAAEC,SAAlB,SACJ,cAAC,IAAD,CAASC,gBAAiBF,IAAEG,OAAQV,GAAII,EAAxC,SAA+CL,EAAMY,UCC5CC,EALC,SAACb,GACd,OAAO,qBAAKO,UAAWC,IAAEM,QAAlB,SAA4Bd,EAAMc,W,iCCCtCC,EAAYC,YAAiB,IAqBpBC,EAFUC,YAAU,CAACC,KAAM,eAAjBD,EAjBL,SAAClB,GAElB,OACG,uBAAMoB,SAAUpB,EAAMqB,aAAtB,UACG,cAACC,EAAA,EAAD,CACGC,UAAWC,IACXZ,KAAK,aACLa,YAAY,qBACZC,SAAU,CAACC,IAAUZ,KAExB,8BACG,wBAAQa,KAAK,SAAb,iCCWGC,EAtBC,SAAC7B,GACd,IAAM8B,EAAkB9B,EAAM+B,QAAQC,KAAI,SAAAC,GAAM,OAAI,cAAC,EAAD,CAA4BrB,KAAMqB,EAAOrB,KAAMN,GAAI2B,EAAO3B,IAAzC2B,EAAO3B,OAEtE4B,EAAmBlC,EAAMmC,SAASH,KAAI,SAAAlB,GAAO,OAAI,cAAC,EAAD,CAA0BA,QAASA,EAAQA,SAA7BA,EAAQR,OAM7E,OACG,sBAAKC,UAAWC,IAAEuB,QAAlB,UACG,qBAAKxB,UAAWC,IAAE4B,aAAlB,SACIN,IAEJ,qBAAKvB,UAAWC,IAAE2B,SAAlB,SACID,IAEJ,cAAC,EAAD,CAAad,SAZG,SAACiB,GACpBrC,EAAMsC,WAAWD,EAAEE,mBCWVC,sBACZzC,aAlBqB,SAACL,GACtB,MAAO,CACJqC,QAASrC,EAAM+C,WAAWV,QAC1BI,SAAUzC,EAAM+C,WAAWN,aAIN,SAACO,GACzB,MAAO,CACJJ,WAAY,SAACK,GAAD,OAAgBD,EAASE,YAAwBD,SAUhE9C,IAFY2C,CAGbX","file":"static/js/4.e89b31df.chunk.js","sourcesContent":["import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst mapStateToPropsForRedirect = (state) => {\n  return {\n    isAuth: state.auth.isAuth,\n  };\n};\n\nexport const WithAuthRedirect = (Component) => {\n\n  // class RedirectComponent extends React.Component {\n  //   render() {\n  //     if (!this.props.isAuth) return <Redirect to='/login' />;\n  //     return <Component {...this.props} />;\n  //   }\n  // }\n  \n  const RedirectComponent = (props) => {\n    if (!props.isAuth) return <Redirect to='/login' />;\n    return <Component {...props} /> \n  }\n\n  const ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(\n    RedirectComponent\n  );\n\n  return ConnectedRedirectComponent;\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__rg4Hd\",\"dialogsItems\":\"Dialogs_dialogsItems__1aMNb\",\"itemName\":\"Dialogs_itemName__14PBx\",\"active\":\"Dialogs_active__2EMbE\",\"messages\":\"Dialogs_messages__1pQsL\",\"textareaBlock\":\"Dialogs_textareaBlock__1CSiK\"};","import s from './../Dialogs.module.css';\nimport { NavLink } from 'react-router-dom';\n\nconst DialogItem = (props) => {\n   let path = `/dialogs/ ${props.id}`;\n   return <div className={s.itemName}>\n      <NavLink activeClassName={s.active} to={path}>{props.name}</NavLink>\n   </div>\n\n}\n\nexport default DialogItem;","import s from './../Dialogs.module.css';\n\nconst Message = (props) => {\n   return <div className={s.message}>{props.message}</div>\n}\n\n\nexport default Message;","import { Field, reduxForm } from \"redux-form\";\nimport { maxLengthCreator, required } from \"../../../utils/validators\";\nimport { Textarea } from \"../../common/formControls/formControls\";\n\nconst maxLength = maxLengthCreator(30);\n\nconst DialogsForm = (props) => {\n  \n   return (\n      <form onSubmit={props.handleSubmit}>\n         <Field\n            component={Textarea}\n            name=\"dialogForm\"\n            placeholder=\"Enter your message\"\n            validate={[required, maxLength]}\n         />\n         <div>\n            <button type=\"submit\" >Add message</button>\n         </div>\n      </form>\n   );\n};\n\nconst DialogsFormRedux = reduxForm({form: 'dialogsForm'})(DialogsForm);\n\nexport default DialogsFormRedux;","import React from 'react';\nimport s from './Dialogs.module.css';\nimport DialogItem from './DialogItem/DialogItem';\nimport Message from './Message/Message';\nimport DialogsForm from './DialogsForm';\n\nconst Dialogs = (props) => {\n   const dialogsElements = props.dialogs.map(dialog => <DialogItem key={dialog.id} name={dialog.name} id={dialog.id} />);\n\n   const messagesElements = props.messages.map(message => <Message key={message.id} message={message.message}/>);\n\n   const addNewMessage = (e) => {\n      props.addMessage(e.dialogForm)\n   }\n\n   return (\n      <div className={s.dialogs}>\n         <div className={s.dialogsItems}>\n            {dialogsElements}\n         </div>\n         <div className={s.messages}>\n            {messagesElements}\n         </div>\n         <DialogsForm onSubmit={addNewMessage} />\n      </div>\n   );\n};\n\nexport default Dialogs;","import { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { addMessageActionCreator } from '../../../redux/dialog-reducer';\nimport { WithAuthRedirect } from '../../HOC/withAuthRedirect';\nimport Dialogs from './Dialogs';\n\nconst mapStateToProps = (state) => {\n   return {\n      dialogs: state.dialogPage.dialogs,\n      messages: state.dialogPage.messages,\n   }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n   return {\n      addMessage: (newMessage) => dispatch(addMessageActionCreator(newMessage))\n   }\n};\n\n// const AuthRedirectComponent = WithAuthRedirect(Dialogs);\n// const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent);\n// export default DialogsContainer;\n\nexport default compose(\n   connect(mapStateToProps, mapDispatchToProps),\n   WithAuthRedirect\n)(Dialogs);"],"sourceRoot":""}